// <auto-generated />
using System;
using Cat.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cat.EntityFramework.Migrations
{
    [DbContext(typeof(CatDbContext))]
    partial class CatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cat.Chat.Models.ChatRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreateOn");

                    b.Property<bool>("Read");

                    b.Property<Guid>("Receiver");

                    b.Property<DateTime>("SendOn");

                    b.Property<Guid>("Sender");

                    b.Property<int>("Type");

                    b.Property<bool>("UnReceived");

                    b.Property<DateTime>("UpdateOn");

                    b.HasKey("Id");

                    b.ToTable("ChatRecord");
                });

            modelBuilder.Entity("Cat.System.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<bool>("IsEnable");

                    b.Property<string>("NickName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Username")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Cat.System.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Cat.Users.Models.Friend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Blacked");

                    b.Property<DateTime>("CreateOn");

                    b.Property<Guid>("FriendId");

                    b.Property<DateTime>("UpdateOn");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("Cat.Users.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<int>("Gender");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50);

                    b.Property<string>("NickName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OfflineOn");

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("Username")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
